The file name given to the requester is the file that it is requesting and also
the file that it is creating with the response it receives from the sender.

So before running this, you probably want to make a separate directory to run
your requester in, separate from where the sender and the main text files are
located.  (Otherwise they will be overwritten)

THINGS TO DO/KNOW BEFORE RUNNING ANYTHING:
-------------------------------------
 - Pull the code from GitHub.  (New folders, Makefile, etc)
 - Make sure you run 'make all'/'make clean' from the main project directory
 - Make sure you run ./sender ... from the main project directory
 - Make sure you run ./requester ... from the request_dir directory

One thing this makes annoying is that your requester cannot be 'active' when 
you run make, or the new executable will not be created.

10/18 ----------
I didn't push any of the code that I wrote tonight because it's still a mess. I 
think I've figured out that we need to change the way we're sending packets a 
bit.  We can't just send a packet struct because then we're just sending a char*
for the payload.  We need to send the actual bytes of data via sendto(). I'm 
trying to put all the data (type, seq, length, payload) into an allocated char[]
and then send that.  I've got it mostly working but I'm having some problems 
with memcpy()-ing the payload. We should discuss this.


10/19 ---------------
I started on the part where the sender sends the data in the payload, but 
the receiver is segfaulting when trying to read it.  Done for now.  
Hopefully not a tough bug to find.
